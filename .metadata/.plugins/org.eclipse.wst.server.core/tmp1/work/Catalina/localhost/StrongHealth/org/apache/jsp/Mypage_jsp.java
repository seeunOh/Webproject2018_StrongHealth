/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.91
 * Generated at: 2018-12-16 08:07:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javabean.Survey;
import java.util.ArrayList;
import javabean.Access_DB;

public final class Mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- 부가적인 테마 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 자바스크립트 -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<!-- Step 1) Load D3.js -->\r\n");
      out.write("<script src=\"https://d3js.org/d3.v5.min.js\"></script>\r\n");
      out.write("<!-- Step 2) Load billboard.js with style -->\r\n");
      out.write("<script src=\"billboard.js\"></script>\r\n");
      out.write("<!-- Load with base style -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"billboard.css\">\r\n");
      out.write("<!-- Or load different theme style -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"insight.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t#box {\r\n");
      out.write("\tpadding: 0px;\r\n");
      out.write("\tmargin: 0px;\r\n");
      out.write("\twidth: 530px;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tvertical-align: middle;\r\n");
      out.write("\t}\r\n");
      out.write("\t/*\r\n");
      out.write("\t#mypageContent{\r\n");
      out.write("\twidth:1080px;\r\n");
      out.write("\tbackground: #FFEAEA;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#CategoryAxis table{\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("\t#CategoryAxis th,td{\r\n");
      out.write("\tborder-bottom: 1px solid #A6A6A6;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\t}\r\n");
      out.write("*/\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("EUC-KR");
	if(session.getAttribute("id") == null){
		out.println("<script>");
		out.println("alert('로그인한 사용자만 이용할 수 있습니다.')");
		out.println("location.href ='Container.jsp'");
		out.println("</script>");
	}
	
	int day = -7;
	Access_DB ac  = new Access_DB();
	ArrayList<Survey> sl = ac.getSurveys((String)session.getAttribute("id"), day);
	ArrayList<Survey> slm = ac.getSurveyMean(sl);
	ArrayList<Survey> sla = ac.getSurveysAll(day);
	if(sla != null){
		sla = ac.getSurveyMean(sla);
	}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1><em>Mypage</em></h1>\r\n");
      out.write("<div id='box'>\r\n");
      out.write("<div id=\"GaugeChart\"></div></div>\r\n");
      out.write("<div id='box'>\r\n");
      out.write("<div id=\"radar\"></div></div>\r\n");
      out.write("<br><br>\r\n");
      out.write("<br><br>\r\n");
      out.write("<div id=\"CategoryAxis\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");

	if(session.getAttribute("authority") != null){
		if(sla != null){
			if(!session.getAttribute("authority").equals("member")){
				out.println("<h3>최근 " + Math.abs(day) + "일 간의 평균 회원 정보</h3>");
				String table = "<table class='table table-striped'><tr><td>아이디</td><td>이름</td><td>주소</td><td>핸드폰번호</td><td>이메일</td><td>운동</td><td>식습관</td><td>음주</td><td>흡연</td><td>스트레스</td><td>합계</td><td>비고</td></tr>";
				for(int i=0; i< sla.size(); i++){
					Survey sr = sla.get(i);
					table += "<tr><td>" + sr.getId() + "</td><td>" + ac.getIdToName(sr.getId()) + "</td><td>" + ac.getIdToAddress(sr.getId()) + "</td><td>"  + ac.getIdToPhone(sr.getId()) + "</td><td>" + 
							 ac.getIdToEmail(sr.getId()) + "</td><td>" + sr.getScore0() + "</td><td>" + sr.getScore1() + "</td><td>" + sr.getScore2() + "</td><td>" + sr.getScore3() + "</td><td>" + sr.getScore4() +
							 "</td><td>" + sr.getScore_sum() + "</td><td>";
					if(sr.getScore_sum() >= 20)
						table += "<img style='width: 20px; height: 20px;' src='img/mypage/green_light.png'></td></tr>";
					else if(sr.getScore_sum() >= 15)
						table += "<img style='width: 20px; height: 20px;' src='img/mypage/yellow_light.png'></td></tr>";
					else
						table += "<img style='width: 20px; height: 20px;' src='img/mypage/red_light.png'></td></tr>";
				}
				table += "</table>";
				out.println(table);
			}	
		}
	}

      out.write("\r\n");
      out.write("<p>&nbsp</p>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var chart = bb.generate({\r\n");
      out.write("\t  data: {\r\n");
      out.write("\t    columns: [\r\n");
      out.write("\t\t[\"합계\", ");

		 		out.println((slm != null? slm.get(0).getScore_sum() : 0) * 4);
				out.println();
		 
      out.write("]\r\n");
      out.write("\t    ],\r\n");
      out.write("\t    type: \"gauge\",\r\n");
      out.write("\t    onclick: function(d, i) {\r\n");
      out.write("\t\tconsole.log(\"onclick\", d, i);\r\n");
      out.write("\t   },\r\n");
      out.write("\t    onover: function(d, i) {\r\n");
      out.write("\t\tconsole.log(\"onover\", d, i);\r\n");
      out.write("\t   },\r\n");
      out.write("\t    onout: function(d, i) {\r\n");
      out.write("\t\tconsole.log(\"onout\", d, i);\r\n");
      out.write("\t   }\r\n");
      out.write("\t  },\r\n");
      out.write("\t  gauge: {\r\n");
      out.write("\t\t  label: {\r\n");
      out.write("\t\t\t  format: function (value, ratio) {return value >= 80 ? (\"건강\\n\" + (value/4) + \"점\") : value >= 60 ? (\"관심\\n\" + (value/4) + \"점\") : (\"주의\\n\" + (value/4) + \"점\");},\r\n");
      out.write("\t\t\t  extents: function (value, isMax) {return (isMax ? \"25점\" : \"0점\");}\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  },\r\n");
      out.write("\t  color: {\r\n");
      out.write("\t    pattern: [\r\n");
      out.write("\t      \"#FF0000\",\r\n");
      out.write("\t\t  \"#FFFF00\",\r\n");
      out.write("\t\t  \"#00FF00\",\r\n");
      out.write("\t    ],\r\n");
      out.write("\t    threshold: {\r\n");
      out.write("\t      values: [\r\n");
      out.write("\t        60,\r\n");
      out.write("\t        80,\r\n");
      out.write("\t        100\r\n");
      out.write("\t      ]\r\n");
      out.write("\t    }\r\n");
      out.write("\t  },\r\n");
      out.write("\t  size: {\r\n");
      out.write("\t\t    height: 250\r\n");
      out.write("\t\t},\r\n");
      out.write("\t  bindto: \"#GaugeChart\"\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("var chart = bb.generate({\r\n");
      out.write("  data: {\r\n");
      out.write("    columns: [\r\n");
      out.write("    \t");

		String data = "['합계', ";
		
		for(int i=0; i<sl.size(); i++){
			Survey sr = sl.get(i);
			data += sr.getScore_sum() + ", ";
		}
		data += "]";
		out.println(data);
		
      out.write("\r\n");
      out.write("    ]\r\n");
      out.write("  },\r\n");
      out.write("  axis: {\r\n");
      out.write("    x: {\r\n");
      out.write("      type: \"category\",\r\n");
      out.write("      categories: [\r\n");
      out.write("      \t");

			for(int i=0; i<sl.size(); i++){
				Survey sr = sl.get(i);
				String ca = "";
				ca += "'" + sr.getDate().substring(5,7) + "월 " +  sr.getDate().substring(8,10) + "일', ";
				out.println(ca);
			}
		
      out.write("\r\n");
      out.write("      ]\r\n");
      out.write("    },\r\n");
      out.write("    y: {\r\n");
      out.write("    \tmax: 24,\r\n");
      out.write("    \tmin: 1\r\n");
      out.write("    }\r\n");
      out.write("  },\r\n");
      out.write("  size: {\r\n");
      out.write("\t  width: 1080\r\n");
      out.write("  },\r\n");
      out.write("  bindto: \"#CategoryAxis\"\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var chart = bb.generate({\r\n");
      out.write("    bindto: \"#radar\",\r\n");
      out.write("    data: {\r\n");
      out.write("        type: \"radar\",\r\n");
      out.write("        x: \"x\",\r\n");
      out.write("        columns: [\r\n");
      out.write("        \t[\"x\", \"운동\", \"식습관\", \"음주\", \"흡연\", \"스트레스\"],\r\n");
      out.write("        \t");

        		for(int i=0; i<sl.size(); i++){
        			Survey sr = sl.get(i);
        			String row = "";
        			row +="['" + sr.getDate().substring(5,7) + "월 " +  sr.getDate().substring(8,10) + "일" +"', " + sr.getScore0() + ", " + sr.getScore1() + ", " + sr.getScore2() + ", " + sr.getScore3() + ", " + sr.getScore4() + "],";
        			out.println(row);
        		}
        	
        	
      out.write("\r\n");
      out.write("        ]\r\n");
      out.write("    },\r\n");
      out.write("    radar: {\r\n");
      out.write("        axis: {\r\n");
      out.write("          max: 5\r\n");
      out.write("        },\r\n");
      out.write("        level: {\r\n");
      out.write("          depth: 5\r\n");
      out.write("        }\r\n");
      out.write("      }\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
