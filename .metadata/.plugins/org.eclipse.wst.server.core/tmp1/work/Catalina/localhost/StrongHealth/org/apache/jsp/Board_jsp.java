/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.91
 * Generated at: 2018-12-16 07:29:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javabean.Article;
import java.util.ArrayList;
import javabean.Access_DB;

public final class Board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<!-- 부가적인 테마 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css\">\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 자바스크립트 -->\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction move(url){\r\n");
      out.write("\t\tlocation.href=url;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("width:1080px;\r\n");
      out.write("text-align:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#Caside{\r\n");
      out.write("height:600px;\r\n");
      out.write("width:200px;\r\n");
      out.write("font-size:25px;\r\n");
      out.write("background: #FF9595;\r\n");
      out.write("float:left;\r\n");
      out.write("color:white;\r\n");
      out.write("opacity:;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#but{\r\n");
      out.write("width:1080px;\r\n");
      out.write("heigth:40px;\r\n");
      out.write("}\r\n");
      out.write("#but a{\r\n");
      out.write("font-size:18px;\r\n");
      out.write("text-decoration:none;\r\n");
      out.write("color:black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#Botable{\r\n");
      out.write("text-align:center;\r\n");
      out.write("height:600px;\r\n");
      out.write("margin:0px 0px 0px 200px;\r\n");
      out.write("font-size:17px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("#Botable a{\r\n");
      out.write("text-decoration:none;\r\n");
      out.write("color:black;\r\n");
      out.write("}\r\n");
      out.write("#Botable a:hover{\r\n");
      out.write("text-decoration:underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#Botable th,td{\r\n");
      out.write("border-bottom: 1px solid #A6A6A6;\r\n");
      out.write("padding: 5px;\r\n");
      out.write("border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write("button{\r\n");
      out.write("background:white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	request.setCharacterEncoding("EUC-KR");
	Access_DB ac = new Access_DB();
	String category = request.getParameter("category");
	ArrayList<Article> al = null;
	String write = "";
	
	if(category.equals("notice")){
		al = ac.getArticles(Access_DB.NOTICE);
		out.println("<h2><em>Notice</em></h2>");	
		write = "notice_write";
	}
	else if(category.equals("qna")){
		al = ac.getArticles(Access_DB.QNA);
		out.println("<h2><em>QnA</em></h2>");
		write = "qna_write";
	}
	else if(category.equals("music_manager")){
		al = ac.getArticles(Access_DB.MUSIC);
		out.println("<h2>Music</h2>");
		write = "music_write";		
		if(session.getAttribute("authority") == null){
			out.println("<script>");
			out.println("alert('관리자만 음악글을 관리할 수 있습니다.')");
			out.println("location.href ='Container.jsp?selected_page=music'");
			out.println("</script>");
		}
		else{
			if(!session.getAttribute("authority").equals("admin")){
				out.println("<script>");
				out.println("alert('관리자만 음악글을 관리할 수 있습니다.')");
				out.println("location.href ='Container.jsp?selected_page=music'");
				out.println("</script>");
			}
		}
	}
	
	int page_number = 0;
	double number_of_article = 10.0;
	int max_article = al.size();
	int max_page = (int)(Math.ceil(max_article/number_of_article)) - 1;

	if(request.getParameter("page_number") != null) {
		page_number = Integer.parseInt(request.getParameter("page_number"));
	}


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=Caside>\r\n");
      out.write("<p style='margin:30px 0px 0px 0px;'>커뮤니티</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=Botable>\r\n");
      out.write("<table class='table table-striped'>\r\n");
      out.write("<tr><td>글번호</td><td>이름</td><td>제목</td><td>날짜</td><td>조회수</td></tr>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction move(url){\r\n");
      out.write("\t\tlocation.href=url;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");

	String row = "";
	int cnt =0;
	for(int i=max_article-1-(page_number*(int)number_of_article); i>=0; i--){
		if(cnt == number_of_article)
			break;
		row += "<tr><td width=90>" + al.get(i).getArticle_number().substring(1) + "</td><td width=100>" + ac.getIdToName(al.get(i).getId()) + "</td><td width=800>" + 
				"<a href='Container.jsp?selected_page=";
		if(category.equals("notice"))
			row += "notice_read";
		else if(category.equals("qna"))
			row += "qna_read";
		else if(category.equals("music_manager")){
			row += "music_read";
		}
		row += "&article_number=" + al.get(i).getArticle_number() + "'>" + 
				al.get(i).getArticle_name() + "</a></td><td width=200>" + al.get(i).getDatetime().substring(0, 11) + "</td><td width=100>" + al.get(i).getViews() + "</td></tr>";
		cnt++;	
	}
	out.println(row);

      out.write("\t\r\n");
      out.write("</table>\r\n");
      out.write("<input class='btn btn-primary pull-right' type=\"button\" value=\"글쓰기\" onclick='move(\"Container.jsp?selected_page=");
      out.print(write );
      out.write("\");'>\r\n");
      out.write("<input class=\"btn btn-danger\" type=\"button\" value=\"<<이전\" onclick='move(\"Container.jsp?selected_page=");
      out.print(category );
      out.write("&page_number=");
      out.print((page_number - 1 == -1 ? 0 : page_number-1) );
      out.write("\");'>\r\n");
      out.write("<input class=\"btn btn-danger\" type=\"button\" value=\"다음>>\" onclick='move(\"Container.jsp?selected_page=");
      out.print(category );
      out.write("&page_number=");
      out.print((page_number == max_page ? max_page : page_number + 1) );
      out.write("\");'>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id = but>\r\n");
      out.write("<p></p>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
